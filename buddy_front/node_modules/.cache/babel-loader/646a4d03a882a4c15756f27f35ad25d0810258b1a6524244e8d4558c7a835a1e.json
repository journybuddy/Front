{"ast":null,"code":"var _jsxFileName = \"C:\\\\journey\\\\front\\\\buddy_front\\\\src\\\\components\\\\KaKaoRedirect.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport axios from 'axios';\nimport './KakaoRedirect.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst KakaoRedirect = () => {\n  _s();\n  const backendUrl = process.env.REACT_APP_BACKEND_URL;\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n  const code = queryParams.get('code');\n  useEffect(() => {\n    const sendCodeToBackend = async () => {\n      try {\n        if (code && backendUrl) {\n          const response = await axios.post(`${backendUrl}/api/auth/kakao`, {\n            code\n          });\n          console.log('Server response:', response.data);\n        } else {\n          console.error('Authorization code or backend URL not found.');\n        }\n      } catch (error) {\n        console.error('Error sending code to backend:', error);\n      }\n    };\n    sendCodeToBackend();\n  }, [code, backendUrl]); // backendUrl을 의존성 배열에 추가합니다.\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"\\uB85C\\uADF8\\uC778 \\uC911\\uC785\\uB2C8\\uB2E4.\", /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Code: \", code]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"spinner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(KakaoRedirect, \"BXcZrDMM76mmm4zA8/QV5UbMNXE=\", false, function () {\n  return [useLocation];\n});\n_c = KakaoRedirect;\nexport default KakaoRedirect;\nvar _c;\n$RefreshReg$(_c, \"KakaoRedirect\");","map":{"version":3,"names":["React","useEffect","useLocation","axios","jsxDEV","_jsxDEV","KakaoRedirect","_s","backendUrl","process","env","REACT_APP_BACKEND_URL","location","queryParams","URLSearchParams","search","code","get","sendCodeToBackend","response","post","console","log","data","error","children","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["C:/journey/front/buddy_front/src/components/KaKaoRedirect.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport './KakaoRedirect.css';\r\n\r\nconst KakaoRedirect: React.FC = () => {\r\n  const backendUrl = process.env.REACT_APP_BACKEND_URL;\r\n  const location = useLocation();\r\n  const queryParams = new URLSearchParams(location.search);\r\n  const code = queryParams.get('code');\r\n\r\n  useEffect(() => {\r\n    const sendCodeToBackend = async () => {\r\n      try {\r\n        if (code && backendUrl) {\r\n          const response = await axios.post(`${backendUrl}/api/auth/kakao`, { code });\r\n          console.log('Server response:', response.data);\r\n        } else {\r\n          console.error('Authorization code or backend URL not found.');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error sending code to backend:', error);\r\n      }\r\n    };\r\n\r\n    sendCodeToBackend();\r\n  }, [code, backendUrl]); // backendUrl을 의존성 배열에 추가합니다.\r\n\r\n  return (\r\n    <div>\r\n      로그인 중입니다.\r\n      <p>Code: {code}</p>\r\n      <div className=\"spinner\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default KakaoRedirect;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,MAAMC,aAAuB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpC,MAAMC,UAAU,GAAGC,OAAO,CAACC,GAAG,CAACC,qBAAqB;EACpD,MAAMC,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAC9B,MAAMW,WAAW,GAAG,IAAIC,eAAe,CAACF,QAAQ,CAACG,MAAM,CAAC;EACxD,MAAMC,IAAI,GAAGH,WAAW,CAACI,GAAG,CAAC,MAAM,CAAC;EAEpChB,SAAS,CAAC,MAAM;IACd,MAAMiB,iBAAiB,GAAG,MAAAA,CAAA,KAAY;MACpC,IAAI;QACF,IAAIF,IAAI,IAAIR,UAAU,EAAE;UACtB,MAAMW,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,IAAI,CAAC,GAAGZ,UAAU,iBAAiB,EAAE;YAAEQ;UAAK,CAAC,CAAC;UAC3EK,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEH,QAAQ,CAACI,IAAI,CAAC;QAChD,CAAC,MAAM;UACLF,OAAO,CAACG,KAAK,CAAC,8CAA8C,CAAC;QAC/D;MACF,CAAC,CAAC,OAAOA,KAAK,EAAE;QACdH,OAAO,CAACG,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;MACxD;IACF,CAAC;IAEDN,iBAAiB,CAAC,CAAC;EACrB,CAAC,EAAE,CAACF,IAAI,EAAER,UAAU,CAAC,CAAC,CAAC,CAAC;;EAExB,oBACEH,OAAA;IAAAoB,QAAA,GAAK,8CAEH,eAAApB,OAAA;MAAAoB,QAAA,GAAG,QAAM,EAACT,IAAI;IAAA;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBxB,OAAA;MAAKyB,SAAS,EAAC;IAAS;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5B,CAAC;AAEV,CAAC;AAACtB,EAAA,CA9BID,aAAuB;EAAA,QAEVJ,WAAW;AAAA;AAAA6B,EAAA,GAFxBzB,aAAuB;AAgC7B,eAAeA,aAAa;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}