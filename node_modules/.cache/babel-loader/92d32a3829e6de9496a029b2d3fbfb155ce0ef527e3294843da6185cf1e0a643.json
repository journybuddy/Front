{"ast":null,"code":"var _jsxFileName = \"C:\\\\journey\\\\front\\\\buddy_front\\\\src\\\\components\\\\KaKaoRedirect.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst KakaoRedirect = () => {\n  _s();\n  const [status, setStatus] = useState('로그인 중입니다.');\n  const backendUrl = process.env.REACT_APP_BACKEND_URL;\n  const location = useLocation();\n  useEffect(() => {\n    const code = new URL(window.location.href).searchParams.get('code');\n    console.log('카카오 인증 코드:', code);\n    const sendCodeToBackend = async () => {\n      try {\n        if (code && backendUrl) {\n          const response = await axios.get(`${backendUrl}/api/auth/kakao`, {\n            params: {\n              code\n            }\n          });\n          console.log('Server response:', response.data);\n          if (response.data.jwtToken) {\n            localStorage.setItem('jwtToken', response.data.jwtToken);\n            setStatus('로그인 성공!');\n          } else {\n            setStatus(response.data.message || '로그인 실패.');\n          }\n        } else {\n          console.error('Authorization code or backend URL not found.');\n          setStatus('인증 코드 또는 백엔드 URL을 찾을 수 없습니다.');\n        }\n      } catch (error) {\n        if (axios.isAxiosError(error)) {\n          var _error$response, _error$response2;\n          // Error is of type AxiosError\n          console.error('Axios error response:', (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data);\n          setStatus(`서버 오류: ${((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data.message) || '알 수 없는 오류'}`);\n        } else if (error instanceof Error) {\n          // Error is of type Error\n          console.error('Error setting up request:', error.message);\n          setStatus('요청 설정 중 오류 발생.');\n        } else {\n          // Handle unknown error type\n          console.error('Unexpected error:', error);\n          setStatus('예상치 못한 오류 발생.');\n        }\n      }\n    };\n    sendCodeToBackend();\n  }, [location.search, backendUrl]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"spinner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(KakaoRedirect, \"l2eDc1UXVvUcTWEIbCXrgVf8B2Y=\", false, function () {\n  return [useLocation];\n});\n_c = KakaoRedirect;\nexport default KakaoRedirect;\nvar _c;\n$RefreshReg$(_c, \"KakaoRedirect\");","map":{"version":3,"names":["React","useEffect","useState","useLocation","axios","jsxDEV","_jsxDEV","KakaoRedirect","_s","status","setStatus","backendUrl","process","env","REACT_APP_BACKEND_URL","location","code","URL","window","href","searchParams","get","console","log","sendCodeToBackend","response","params","data","jwtToken","localStorage","setItem","message","error","isAxiosError","_error$response","_error$response2","Error","search","children","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["C:/journey/front/buddy_front/src/components/KaKaoRedirect.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\n\r\n\r\nconst KakaoRedirect: React.FC = () => {\r\n  const [status, setStatus] = useState('로그인 중입니다.');\r\n  const backendUrl = process.env.REACT_APP_BACKEND_URL;\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    const code = new URL(window.location.href).searchParams.get('code');\r\n    console.log('카카오 인증 코드:', code);\r\n\r\n    \r\n    const sendCodeToBackend = async () => {\r\n      try {\r\n        if (code && backendUrl) {\r\n          const response = await axios.get(`${backendUrl}/api/auth/kakao`, {\r\n            params: { code }\r\n          });\r\n          console.log('Server response:', response.data);\r\n    \r\n          if (response.data.jwtToken) {\r\n            localStorage.setItem('jwtToken', response.data.jwtToken);\r\n            setStatus('로그인 성공!');\r\n          } else {\r\n            setStatus(response.data.message || '로그인 실패.');\r\n          }\r\n        } else {\r\n          console.error('Authorization code or backend URL not found.');\r\n          setStatus('인증 코드 또는 백엔드 URL을 찾을 수 없습니다.');\r\n        }\r\n      } catch (error: unknown) {\r\n        if (axios.isAxiosError(error)) {\r\n          // Error is of type AxiosError\r\n          console.error('Axios error response:', error.response?.data);\r\n          setStatus(`서버 오류: ${error.response?.data.message || '알 수 없는 오류'}`);\r\n        } else if (error instanceof Error) {\r\n          // Error is of type Error\r\n          console.error('Error setting up request:', error.message);\r\n          setStatus('요청 설정 중 오류 발생.');\r\n        } else {\r\n          // Handle unknown error type\r\n          console.error('Unexpected error:', error);\r\n          setStatus('예상치 못한 오류 발생.');\r\n        }\r\n      }\r\n    };\r\n\r\n    sendCodeToBackend();\r\n  }, [location.search, backendUrl]);\r\n\r\n  return (\r\n    <div>\r\n      <p>{status}</p>\r\n      <div className=\"spinner\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default KakaoRedirect;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}