{"ast":null,"code":"var _jsxFileName = \"C:\\\\journey\\\\front\\\\buddy_front\\\\src\\\\components\\\\KaKaoRedirect.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst KakaoRedirect = () => {\n  _s();\n  const [status, setStatus] = useState('로그인 중입니다.');\n  const backendUrl = process.env.REACT_APP_BACKEND_URL;\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n  const code = queryParams.get('code'); // 인가코드 추출\n\n  useEffect(() => {\n    const sendCodeToBackend = async () => {\n      try {\n        if (code && backendUrl) {\n          // Correctly pass the code as a query parameter\n          const response = await axios.post(`${backendUrl}/api/auth/kakao?code=${code}`);\n          console.log('Response status:', response.status);\n          localStorage.setItem('jwtToken', response.data);\n          setStatus('로그인 성공');\n          console.log('Stored jwtToken:', localStorage.getItem('jwtToken'));\n\n          // 로그인 성공 후 필요한 작업 수행\n        } else {\n          console.error('Authorization code or backend URL not found.');\n          setStatus('로그인 실패: 인가 코드 또는 백엔드 URL을 찾을 수 없습니다.');\n        }\n      } catch (error) {\n        if (axios.isAxiosError(error)) {\n          var _error$response;\n          console.error('Error details:', (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data);\n        } else {\n          console.error('Unexpected error:', error);\n        }\n        setStatus('로그인 실패: 서버와의 통신 오류');\n      }\n    };\n    sendCodeToBackend();\n  }, [code, backendUrl]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"spinner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(KakaoRedirect, \"l2eDc1UXVvUcTWEIbCXrgVf8B2Y=\", false, function () {\n  return [useLocation];\n});\n_c = KakaoRedirect;\nexport default KakaoRedirect;\nvar _c;\n$RefreshReg$(_c, \"KakaoRedirect\");","map":{"version":3,"names":["React","useEffect","useState","useLocation","axios","jsxDEV","_jsxDEV","KakaoRedirect","_s","status","setStatus","backendUrl","process","env","REACT_APP_BACKEND_URL","location","queryParams","URLSearchParams","search","code","get","sendCodeToBackend","response","post","console","log","localStorage","setItem","data","getItem","error","isAxiosError","_error$response","children","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["C:/journey/front/buddy_front/src/components/KaKaoRedirect.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst KakaoRedirect: React.FC = () => {\r\n  const [status, setStatus] = useState('로그인 중입니다.');\r\n  const backendUrl = process.env.REACT_APP_BACKEND_URL;\r\n  const location = useLocation();\r\n  const queryParams = new URLSearchParams(location.search);\r\n  const code = queryParams.get('code'); // 인가코드 추출\r\n\r\n  useEffect(() => {\r\n    const sendCodeToBackend = async () => {\r\n      try {\r\n        if (code && backendUrl) {\r\n          // Correctly pass the code as a query parameter\r\n          const response = await axios.post(`${backendUrl}/api/auth/kakao?code=${code}`);\r\n          console.log('Response status:', response.status);\r\n          localStorage.setItem('jwtToken', response.data);\r\n          setStatus('로그인 성공');\r\n          console.log('Stored jwtToken:', localStorage.getItem('jwtToken'));\r\n\r\n          // 로그인 성공 후 필요한 작업 수행\r\n        \r\n        } else {\r\n          console.error('Authorization code or backend URL not found.');\r\n          setStatus('로그인 실패: 인가 코드 또는 백엔드 URL을 찾을 수 없습니다.');\r\n        }\r\n      } catch (error) {\r\n        if (axios.isAxiosError(error)) {\r\n          console.error('Error details:', error.response?.data);\r\n        } else {\r\n          console.error('Unexpected error:', error);\r\n        }\r\n        setStatus('로그인 실패: 서버와의 통신 오류');\r\n      }\r\n    };\r\n    sendCodeToBackend();\r\n  }, [code, backendUrl]);\r\n\r\n  return (\r\n    <div>\r\n      <p>{status}</p>\r\n      <div className=\"spinner\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default KakaoRedirect;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,aAAuB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,WAAW,CAAC;EACjD,MAAMS,UAAU,GAAGC,OAAO,CAACC,GAAG,CAACC,qBAAqB;EACpD,MAAMC,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAC9B,MAAMa,WAAW,GAAG,IAAIC,eAAe,CAACF,QAAQ,CAACG,MAAM,CAAC;EACxD,MAAMC,IAAI,GAAGH,WAAW,CAACI,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC;;EAEtCnB,SAAS,CAAC,MAAM;IACd,MAAMoB,iBAAiB,GAAG,MAAAA,CAAA,KAAY;MACpC,IAAI;QACF,IAAIF,IAAI,IAAIR,UAAU,EAAE;UACtB;UACA,MAAMW,QAAQ,GAAG,MAAMlB,KAAK,CAACmB,IAAI,CAAC,GAAGZ,UAAU,wBAAwBQ,IAAI,EAAE,CAAC;UAC9EK,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEH,QAAQ,CAACb,MAAM,CAAC;UAChDiB,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEL,QAAQ,CAACM,IAAI,CAAC;UAC/ClB,SAAS,CAAC,QAAQ,CAAC;UACnBc,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEC,YAAY,CAACG,OAAO,CAAC,UAAU,CAAC,CAAC;;UAEjE;QAEF,CAAC,MAAM;UACLL,OAAO,CAACM,KAAK,CAAC,8CAA8C,CAAC;UAC7DpB,SAAS,CAAC,sCAAsC,CAAC;QACnD;MACF,CAAC,CAAC,OAAOoB,KAAK,EAAE;QACd,IAAI1B,KAAK,CAAC2B,YAAY,CAACD,KAAK,CAAC,EAAE;UAAA,IAAAE,eAAA;UAC7BR,OAAO,CAACM,KAAK,CAAC,gBAAgB,GAAAE,eAAA,GAAEF,KAAK,CAACR,QAAQ,cAAAU,eAAA,uBAAdA,eAAA,CAAgBJ,IAAI,CAAC;QACvD,CAAC,MAAM;UACLJ,OAAO,CAACM,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;QAC3C;QACApB,SAAS,CAAC,oBAAoB,CAAC;MACjC;IACF,CAAC;IACDW,iBAAiB,CAAC,CAAC;EACrB,CAAC,EAAE,CAACF,IAAI,EAAER,UAAU,CAAC,CAAC;EAEtB,oBACEL,OAAA;IAAA2B,QAAA,gBACE3B,OAAA;MAAA2B,QAAA,EAAIxB;IAAM;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACf/B,OAAA;MAAKgC,SAAS,EAAC;IAAS;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5B,CAAC;AAEV,CAAC;AAAC7B,EAAA,CA1CID,aAAuB;EAAA,QAGVJ,WAAW;AAAA;AAAAoC,EAAA,GAHxBhC,aAAuB;AA4C7B,eAAeA,aAAa;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}